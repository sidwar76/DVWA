name: Gitleaks Scan
on: [pull_request, push, workflow_dispatch]

jobs:
  scan:
    name: Gitleaks Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Gitleaks Binary
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.17.0/gitleaks_8.17.0_linux_arm64.tar.gz
          tar -xzf gitleaks_8.17.0_linux_arm64.tar.gz

      - name: Make Gitleaks Executable
        run: chmod +x gitleaks_8.17.0_linux_arm64/gitleaks

      - name: Move Gitleaks Binary to /usr/local/bin
        run: sudo mv gitleaks_8.17.0_linux_arm64/gitleaks /usr/local/bin/

      - name: Debug
        run: ls /usr/local/bin/

      - name: Run Gitleaks Scan
        run: |
          # Replace 'https://github.com/owner/repo.git' with the actual repository URL
          REPO_URL='https://github.com/sidwar76/hashedin.git'
          CUSTOM_RULES='{
            "rules": [
              {
                "regex": "(password|api_key|secret)",
                "description": "Potential sensitive information",
                "tags": ["high_severity"]
              },
              {
                "regex": "(access_key|private_key)",
                "description": "Potential access keys",
                "tags": ["high_severity"]
              },
              {
                "file": "\\.env|config\\.json",
                "description": "Potential configuration files",
                "tags": ["medium_severity"]
              }
            ]
          }'

          # Save custom rules to a temporary file
          echo "$CUSTOM_RULES" > custom-rules.json

          # Run Gitleaks scan with custom rules and the repository URL
          gitleaks --path=/github/workspace --config=custom-rules.json --report=gitleaks-report.json $REPO_URL

      - name: Upload Gitleaks Scan Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: gitleaks-scan-report
          path: gitleaks-report.json
