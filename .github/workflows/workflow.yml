name: DevSecOps Pipeline
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t sidwar/myapp:${{ github.sha }} .

      - name: Docker Logout
        run: docker logout

      - name: Docker Login
        run: |
          # Log in to Docker Hub or the desired container registry
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker push sidwar/myapp:${{ github.sha }}

      - name: Vulnerability Scanning
        run: |
          # Use Trivy for vulnerability scanning
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/root/ aquasec/trivy:latest image sidwar/myapp:${{ github.sha }}

#       - name: Runtime Protection and Monitoring
#         run: |
#           # Use Sysdig Secure for runtime protection and monitoring
#           docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -e ACCESS_KEY=ac894ca7-21a2-41f2-8f69-dc1ed1d4eac6 -e SECRET_KEY=97b7a21c-2987-48da-9489-905c05b51349 sysdig/secure-inline-scan:latest myapp:${{ github.sha }}


      - name: Verify and Sign Image
        run: |
          # Verify if the Docker image is signed
          if docker trust inspect --pretty myapp:${{ github.sha }} &> /dev/null; then
            echo "Image is already signed."
          else
            echo "Image is not signed. Signing the image using cosign..."
            fi

#             # Install cosign
#             curl -sSL "https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64" -o cosign
#             chmod +x cosign
#             sudo mv cosign /usr/local/bin/cosign

#             # Log in to Docker Hub or the desired container registry
#             echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#             # Generate key pair
#             cosign generate-key-pair

#             # Sign the image using cosign
#             cosign sign -key cosign.key myapp:${{ github.sha }}

      - name: Secrets Scanning
        run: |
          # Use GitGuardian for secrets scanning
          docker run --rm -v $(pwd):/scan gitguardian/cli scan --path /scan


           



#       - name: Image Integrity Verification
#         run: |
#           # Enable Docker Content Trust (DCT)
#           export DOCKER_CONTENT_TRUST=1

#           # Pull the Docker image with DCT enabled
#           docker pull sidwar/myapp:${{ github.sha }}
#       - name: Install GitGuardian CLI
#         run: |
#           # Install GitGuardian CLI
#           pip3 install gitguardian

#       - name: Secrets Scanning
#         run: |
#           # Use GitGuardian for secrets scanning
#           gitguardian scan --path .

      - name: Container Configuration Security
        run: |
          # Use kube-bench for container configuration security
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/host aquasec/kube-bench:latest --config /host/myapp.yaml
